{"version":3,"sources":["../node_modules/peerjs/dist sync","modules/game/units.ts","components/grid2/Overlay.tsx","components/grid2/Viewport.tsx","components/grid2/GridItem.tsx","components/grid2/SelectionBox.tsx","modules/comms/peer.ts","modules/comms/client.ts","modules/comms/server.ts","modules/toast.ts","storage/session.ts","modules/comms/index.ts","modules/sync.ts","modules/game/index.ts","components/grid2/Grid.tsx","components/util/useDrop.ts","components/toolbar/Toolbar.tsx","components/toasts/ToastArea.tsx","components/toolkit/Loading.tsx","components/App.tsx","modules/players.ts","store.ts","modules/game/persist.ts","i18n.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","coord","ev","clientX","clientY","floor","a","map","Math","add","b","clamp","val","min","max","React","memo","props","style","position","left","right","top","bottom","background","pointerEvents","borderRight","borderBottom","transition","Viewport","forwardRef","ref","viewport","useRef","canvas","transform","scale","offset","setTransform","f","apply","newT","current","newOffset","width","height","fontSize","baseScalar","baseUnit","scrollTo","initialScale","pinch","useGesture","onPinchEnd","onPinch","state","event","preventDefault","stopPropagation","newScale","deltaY","client_origin","origin","clientToGrid","delta","da","initial","oldScale","t","performZoom","onPinchStart","useCallback","domTarget","eventOptions","passive","capture","useEffect","rect","getBoundingClientRect","useImperativeHandle","scroll","onScrollEnd","scrollLeft","scrollTop","className","children","GridItem","div","type","ease","duration","animate","loc","dim","SelectionBox","initialLoc","onPointerMove","onSelectionDrag","onPointerUp","onSelectionDrop","itemRef","addEventListener","border","boxShadow","onPointerDown","currentTarget","setPointerCapture","pointerId","onPointerMoveCapture","onPointerUpCapture","process","REACT_APP_PEERJS_HOST","REACT_APP_PEERJS_PORT","create_peer","console","log","peer","Peer","debug","host","secure","port","parseInt","undefined","path","Promise","reject","on_error","cleanup","on_open","off","on","connect_peer","dc","connect","PEERJS_ROOM_PREFIX","Client","remote_id","config","this","attachListeners","label","attemptConnect","onDisconnect","connect_to_game","setTimeout","d","onMessage","onConnect","msg","send","Server","clients","Map","conn","set","broadcast_json","delete","error","exclude","c","get","sleep","m","r","issueToast","createAsyncThunk","dispatch","Date","now","addToast","removeToast","toast","createSlice","name","initialState","toasts","reducers","payload","push","filter","actions","defaults","was_hosting","comms_id","uuid","player_name","game","Session","key","item","sessionStorage","getItem","JSON","parse","def","setItem","stringify","v","gameId","create","comms","disconnected","connected","_","getState","clientId","server","sendTo","forkGame","window","history","pushState","status","hosting","action","extraReducers","builder","addCase","pending","fulfilled","rejected","shared","reducer","prepare","meta","src","maps","images","loadGame","setDimensions","addImage","img","updateImage","reset","getDataURL","file","reader","FileReader","onload","result","readAsDataURL","extractURLFromHTML","html","DOMParser","parseFromString","querySelector","gridDrag","dropLayer","selection","useState","selectionOffset","setSelectionOffset","hoverHint","items","useSelector","useDispatch","onDrag","onDrop","dragDepth","setDragDepth","x","y","dragState","setDragState","onDragEnter","onDragLeave","onDragOver","useDrop","coords","dataItems","dataTransfer","addItem","s","random","href","length","i","startsWith","getAsFile","dataURL","getAsString","kind","dragging","drag","dragHandlers","dimensions","Object","values","onDragStart","alt","display","Toolbar","ToastArea","useTranslation","opacity","exit","layout","Loading","App","curr_map","onClick","players","local","others","addPlayer","all","setLocalPlayer","mainReducer","combineReducers","store","configureStore","applySync","middleware","api","next","preloadedState","subscribe","persistState","i18n","use","Backend","initReactI18next","init","lng","fallbackLng","whitelist","interpolation","escapeValue","backend","loadPath","URLSearchParams","location","search","gameState","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.3b7d2a0a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 51;","export type GridSpace = \"gridspace\";\nexport type CanvasSpace = \"canvasspace\";\nexport type ClientSpace = \"clientspace\";\n\ninterface Unit<T> {\n    _unitBrand: T\n}\nexport type Coord<T> = [number, number] & Unit<'coord'>\nexport type Offset<T> = [number, number] & Unit<'offset'>\nexport type Pair<T> = Coord<T> | Offset<T>\n\nexport function coord(ev: {clientX: number, clientY: number}): Coord<ClientSpace> {\n    return [ev.clientX, ev.clientY] as Coord<ClientSpace> \n}\n\nexport function floor<T extends [number, number] > (a: T): T {\n    return a.map(Math.floor) as T\n}\n\nexport function trunc<T extends [number, number] > (a: T): T {\n    return a.map(n => n < 0 ? Math.ceil(n) : Math.floor(n)) as T\n}\n\n\nexport function add<T>(a: Offset<T>, b: Offset<T>): Offset<T>;\nexport function add<T>(a: Coord<T>, b: Offset<T>): Coord<T>\nexport function add<T>(a: [number, number], b: [number,number]): [number,number] {\n    return [a[0] + b[0], a[1] + b[1]] as any;\n}\n\nexport function sub<T>(a: Offset<T>, b: Offset<T>): Offset<T>;\nexport function sub<T>(a: Coord<T>, b: Offset<T>): Coord<T>\nexport function sub<T>(a: Coord<T>, b: Coord<T>): Offset<T>\nexport function sub<T>(a: [number, number], b: [number,number]): [number,number] {\n    return [a[0] - b[0], a[1] - b[1]] as any;\n}\n\nexport function clamp(val: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, val));\n}\n\nexport function coord_clamp<T, P extends Pair<T>>(val: P, min: [number, number], max: [number, number]): P {\n    return [\n        Math.max(min[0], Math.min(max[0], val[0])),\n        Math.max(min[1], Math.min(max[1], val[1])),\n    ] as P;\n}","import React from \"react\";\nimport { Coord, GridSpace } from \"../../modules/game/units\";\n\nexport interface OverlayProps {\n  width: number,\n  height: number,\n  onDrop?: (coord: Coord<GridSpace>) => void;\n}\n\nconst thickness = 0.05\nconst linecolor = \"gray\"\nfunction Overlay(props: OverlayProps) {\n  return (<div style={{\n    position: \"absolute\",\n    left: `${-thickness/2}em`,\n    right: `${-thickness/2}em`,\n    top: `${-thickness/2}em`,\n    bottom: `${-thickness/2}em`,\n    background: `\n      repeating-linear-gradient(to right, ${linecolor}, ${linecolor} ${thickness}em, transparent ${thickness}em 1em),\n      repeating-linear-gradient(to bottom, ${linecolor}, ${linecolor} ${thickness}em, transparent ${thickness}em 1em)`,\n    pointerEvents: \"none\",\n    borderRight: `${thickness}em solid ${linecolor}`,\n    borderBottom: `${thickness}em solid ${linecolor}`,\n    transition: \"position 2s\"\n  }}></div>\n  );\n}\nexport default React.memo(Overlay);","import { useRef, useCallback, PropsWithChildren, ForwardRefRenderFunction, useImperativeHandle, forwardRef, memo, useEffect } from \"react\";\nimport { Coord, clamp, GridSpace } from \"../../modules/game/units\";\nimport { useGesture } from \"react-use-gesture\";\nimport { FullGestureState } from \"react-use-gesture/dist/types\";\n\n\nimport React from \"react\";\n\nexport interface ViewportProps {\n  baseScalar: number,\n  baseUnit: string,\n  height: number,\n  width: number,\n}\n\nconst minScale = 0.2;\nconst maxScale = 2;\n\nexport interface ViewportRef {\n  clientToGrid(coord: [number, number]): Coord<GridSpace>\n}\n\nexport interface Transform {\n  scale: number,\n  offset: Coord<GridSpace>,\n}\n\nexport const ViewportElem: ForwardRefRenderFunction<ViewportRef, PropsWithChildren<ViewportProps>> = (props, ref) => {\n  const viewport = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLDivElement>(null);\n\n  const transform = useRef<Transform>({\n    scale: 1,\n    offset: [0, 0] as Coord<GridSpace>,\n  });\n\n  const setTransform = (f: (t: Transform) => Transform, apply=true) => {\n    const newT = f(transform.current);\n    const newOffset = [\n      clamp(newT.offset[0], 0, props.width),\n      clamp(newT.offset[1], 0, props.height)\n    ]\n    transform.current = {\n      scale: newT.scale,\n      offset: newOffset as any,\n    }\n      ;\n    \n    if (apply) {\n      viewport.current!.style.fontSize = `${transform.current.scale * props.baseScalar}${props.baseUnit}`\n      viewport.current!.scrollTo(transform.current.offset[0] * 96 * transform.current.scale, transform.current.offset[1] * transform.current.scale * 96)\n\n    }\n  }\n    // Does fancy math to zoom around a mouse location. Location given relative to viewport\n    const performZoom = \n      (origin: Coord<GridSpace>, oldScale: number, newScale: number) => {\n        const delta = clamp(newScale - oldScale, -0.05, 0.05);\n        newScale = clamp(oldScale + delta, minScale, maxScale);\n        // if we don't return early, we'll end up sliding around\n        if (newScale === oldScale) {\n          return;\n        }\n        setTransform(t => {\n          ;\n          return {\n            scale: newScale,\n            offset: [\n                t.offset[0] - (t.offset[0] - origin[0]) * delta / oldScale,\n                t.offset[1] - (t.offset[1] - origin[1]) * delta / oldScale,\n            ] as Coord<GridSpace>\n          }\n        });\n      }\n      \n    // const drag = useDrag((state) => {\n    //   if (state.buttons !== 1) {\n    //     return;\n    //   }\n    //   setTransform(t => {\n    //     ;\n    //     let o = clientToGrid(sub(state.initial as Offset<ViewSpace>, state.delta as Offset<ViewSpace>));\n    //     o = coord_clamp(\n    //       o,\n    //       [0, 0],\n    //       [\n    //         props.width, props.height\n    //       ]\n    //     );\n    //     return {\n    //       ...t,\n    //       offset: o\n    //     };\n    //   });\n    // });\n  \n    const initialScale = useRef(1);\n    const pinch = useGesture(\n      {\n        onPinchEnd: () => {\n          initialScale.current = transform.current.scale;\n        },\n        onPinch: \n          (state: FullGestureState<\"pinch\">) => {\n            state.event?.preventDefault();\n            state.event?.stopPropagation();\n            ;\n            //@ts-ignore\n            const deltaY = state.event?.deltaY\n            //@ts-ignore\n            const client_origin = state.origin || [state.event!.clientX, state.event!.clientY] \n            ;\n            const origin =\n              clientToGrid(client_origin);\n            let newScale: number;\n            if (deltaY) {\n              let delta = -1 * deltaY * 0.05 * transform.current.scale;\n              newScale = transform.current.scale + delta;\n            } else {\n              newScale = (state.da[0] / state.initial[0] - 1) + initialScale.current!;\n            }\n            performZoom(\n              origin,\n              transform.current.scale,\n              newScale\n            );\n          },\n        onPinchStart: useCallback(\n          (state: FullGestureState<\"pinch\">) => {\n            state.event?.preventDefault();\n            state.event?.stopPropagation();\n            ;\n            initialScale.current = transform.current.scale;\n            ;\n          },\n          [transform]\n        ),\n      },\n      {\n        domTarget: viewport,\n        eventOptions: {\n          passive: false,\n          capture: true,\n        },\n      }\n    );\n  //@ts-ignore\n  useEffect(pinch, [pinch]);\n  \n  const clientToGrid = (coord: [number, number]): Coord<GridSpace> => {\n     \n      const rect = canvas.current!.getBoundingClientRect();\n    ;\n    ;\n      return [\n        (coord[0] - rect.left) / 96 / transform.current.scale,\n        (coord[1] - rect.top) / 96 / transform.current.scale,\n      ] as Coord<GridSpace>;\n    }\n  \n  useImperativeHandle(ref, () => ({\n    clientToGrid,\n  }), []);\n\n    // Wheel must come first to prevent its use by pinch,\n    // because the logic for how to zoom on each is different\n    const scroll = useGesture({\n      onScrollEnd(state: FullGestureState<'scroll'>) {\n        ;\n        setTransform(t => ({\n          ...t,\n          offset: [viewport.current!.scrollLeft / 96 / transform.current.scale, viewport.current!.scrollTop / 96 / transform.current.scale] as any,\n        }), false);\n      },\n    });\n    return (\n      <div className=\"viewport\" {...scroll()} ref={viewport} style={{\n          fontSize: `${transform.current.scale * props.baseScalar}${props.baseUnit}`,\n      }}>\n        <div className=\"padding\" >\n        <div ref={canvas}\n          className=\"gridsvg\"\n                style={{\n                  width: `${props.width}em`,\n                  height: `${props.height}em`,\n                  position: \"relative\",\n                }}>\n                {props.children}\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport const Viewport = memo(forwardRef(ViewportElem));","import { Coord, Offset, GridSpace } from \"../../modules/game/units\";\nimport { PropsWithChildren, memo, forwardRef } from \"react\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport interface GridItemProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  loc: Coord<GridSpace>,\n  dim: Offset<GridSpace>,\n  style?: Omit<React.CSSProperties, 'position' | 'left' | 'top' | 'width' | 'height'>,\n}\n\nexport const GridItem = memo(forwardRef((props: PropsWithChildren<GridItemProps>, ref) => {\n  return (\n    <motion.div\n      {...props as any}\n      ref={ref}\n      style={{\n        position: \"absolute\",\n        ...props.style,\n      }}\n      initial={false}\n      transition={{type: \"tween\", ease: \"easeOut\", duration: 0.2}}\n      animate={{\n        left: props.loc[0] + \"em\",\n        top: props.loc[1] + \"em\",\n        width: props.dim[0] + \"em\",\n        height: props.dim[1] + \"em\",\n      }}\n      >\n      {props.children}\n    </motion.div>\n  )\n}));","import { useRef, useCallback, useEffect } from \"react\";\nimport { GridItemProps, GridItem } from \"./GridItem\";\nimport React, {PointerEvent} from \"react\";\nimport { ClientSpace, Coord, coord } from \"../../modules/game/units\";\n\ninterface SelectionProps extends GridItemProps {\n  onSelectionDrag: (offset: Coord<ClientSpace>) => void,\n  onSelectionDrop: (offset: Coord<ClientSpace>) => void,\n}\n\nfunction SelectionBox(props: SelectionProps) {\n  const initialLoc = useRef<Coord<ClientSpace> | null>(null)\n  // Represents the distance in client pixels from selection element origin to click point\n  const onPointerMove = useCallback((ev: PointerEvent<HTMLElement>) => {\n      if (initialLoc.current || ev.type === 'mouse') {\n          //ev.preventDefault();\n          ev.stopPropagation();\n          \n          props.onSelectionDrag(coord(ev));\n      }\n  }, [props])\n  const onPointerUp = useCallback((ev) => {\n      if (initialLoc.current !== null) {\n          ev.preventDefault();\n        ev.stopPropagation();\n        ;\n          //(ev.currentTarget as HTMLDivElement).releasePointerCapture(ev.pointerId);\n          props.onSelectionDrop(coord(ev));\n        initialLoc.current = null;\n      }\n  }, [props])\n\n  const itemRef = useRef<HTMLDivElement>();\n  useEffect(() => {\n    itemRef.current?.addEventListener('touchmove', ev => ev.preventDefault(), {passive: false});\n  })\n  return (\n    <GridItem\n      ref={itemRef}\n      loc={props.loc}\n      dim={props.dim}\n      style={{\n        border: \"2px solid highlight\",\n        boxShadow: \"0 0 10px highlight\",\n      }}\n      onPointerDown={ev => {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    \n        ev.currentTarget.setPointerCapture(ev.pointerId);\n        initialLoc.current = coord(ev);\n      }}\n      onPointerMoveCapture={onPointerMove}\n      onPointerUpCapture={onPointerUp}\n    ></GridItem>\n  )\n}\n\nexport default SelectionBox;","import Peer, { DataConnection } from \"peerjs\";\nlet { REACT_APP_PEERJS_HOST, REACT_APP_PEERJS_PORT } = process.env;\nexport type PeerID = string & {__roomId: string}\nexport async function create_peer(id?: PeerID): Promise<Peer> {\n  console.log(\"ENV??\", process.env);\n  let peer = new Peer(id, {\n    debug: 3,\n    host: REACT_APP_PEERJS_HOST,\n    secure: true,\n    port: REACT_APP_PEERJS_PORT ? parseInt(REACT_APP_PEERJS_PORT) : undefined,\n    path: \"/\"\n  });\n  return new Promise((resolve, reject) => {\n    let on_error = (e: any) => {\n      cleanup();\n      reject(`Error establishing peer: ${e}`)\n    }\n    let on_open = () => {\n      cleanup();\n      console.log(\"OPENING?\")\n      resolve(peer);\n    }\n    let cleanup = () => {\n      peer.off('open', on_open);\n      peer.off('error', on_error);\n    }\n    peer.on('open', on_open);\n    peer.on('error', on_error);\n  })\n}\n\nexport async function connect_peer(peer: Peer, id: PeerID): Promise<DataConnection> {\n  const dc = peer.connect(id);\n  return new Promise((resolve, reject) => {\n    let on_error = (e: any) => {\n      cleanup();\n      reject(`Error establishing peer: ${e}`)\n    }\n    let on_open = () => {\n      cleanup();\n      resolve(dc);\n    }\n    let cleanup = () => {\n      dc.off('open', on_open);\n      dc.off('error', on_error);\n    }\n    dc.on('open', on_open);\n    dc.on('error', on_error);\n  })\n}","import { v4 as uuidv4 } from 'uuid';\nimport { DataConnection } from 'peerjs';\nimport { PeerID, connect_peer, create_peer } from './peer';\nimport { ServerClient } from './server';\nconst { PEERJS_ROOM_PREFIX } = process.env;\n\n\nexport type ClientConfig = {\n  onConnect(self: Client): void\n  onDisconnect(): void\n  onMessage(msg: any): void\n}\n\nexport function generate_id(): PeerID {\n  return PEERJS_ROOM_PREFIX + uuidv4() as PeerID;\n}\n\nexport class Client implements ServerClient {\n  private dc: DataConnection\n  private remote_id: PeerID\n  private config: ClientConfig\n  get id(): string {\n    return this.dc.label\n  }\n  private constructor(dc: DataConnection, remote_id: PeerID, config: ClientConfig) {\n    this.dc = dc;\n    this.remote_id = remote_id;\n    this.config = config;\n\n    this.attachListeners(this.dc);\n  }\n\n  private attachListeners(dc: DataConnection) {\n    this.dc.on('close', () => {\n      const attemptConnect = async () => {\n        this.config.onDisconnect();\n        try {\n          this.dc = await connect_to_game(this.remote_id);\n          this.attachListeners(this.dc);\n        } catch {\n          console.log(\"failed to reconnect\");\n          setTimeout(attemptConnect, 1000)\n        }\n      }\n      attemptConnect();\n    });\n\n    this.dc.on('error', () => {\n      const attemptConnect = async () => {\n        this.config.onDisconnect();\n        try {\n          this.dc = await connect_to_game(this.remote_id);\n          this.attachListeners(this.dc);\n        } catch {\n          console.log(\"failed to reconnect\");\n          setTimeout(attemptConnect, 1000)\n        }\n      }\n      attemptConnect();\n    });\n\n    this.dc.on('data', d => {\n      console.log(\"INCOMING!\");\n      this.config.onMessage(d)\n    })\n\n    this.config.onConnect(this);\n  }\n\n  send(msg: any): void {\n    this.dc.send(msg);\n  }\n\n  static async create(remote_id: PeerID, config: ClientConfig): Promise<Client> {\n    const dc = await connect_to_game(remote_id);\n    return new Client(dc, remote_id, config);\n  }\n}\n\nasync function connect_to_game(id: PeerID): Promise<DataConnection> {\n  return await connect_peer(await create_peer(), id);\n}\n","import Peer from \"peerjs\";\nimport { ConnId } from \".\";\nimport { create_peer, PeerID } from \"./peer\";\n\ntype Config = {\n  onConnect?(label: ConnId): void\n  onDisconnect?(label: ConnId): void\n  onMessage?(msg: any): void\n}\n\nexport interface ServerClient {\n  send(msg: any): void;\n  readonly id: string,\n}\n\n\nexport class Server implements ServerClient {\n  private peer: Peer;\n  private clients: Map<string, Peer.DataConnection>;\n  readonly id: string;\n\n  private constructor(id: string, peer: Peer, config: Config) {\n    this.peer = peer;\n    this.id = id;\n    this.clients = new Map();\n\n    this.peer.on('connection', conn => {\n      conn.on('open', () => {\n        console.log(\"NEW CLIENT\");\n        const label = conn.label as ConnId;\n        this.clients.set(label, conn);\n        config.onConnect && config.onConnect(label);\n        config.onDisconnect && conn.on('close', () => {\n          config.onDisconnect!(label)\n        })\n        conn.on('data', d => {\n          this.broadcast_json(d, conn.label)\n          config.onMessage && config.onMessage(d);\n        });\n        conn.on('close', () => {\n          this.clients.delete(conn.label)\n        })\n        conn.on('error', () => {\n          this.clients.delete(conn.label)\n        })\n      })\n    })\n\n    this.peer.on('disconnected', () => {\n      console.error(\"ACK! Disconnect from signaler.\")\n    })\n  }\n\n  static async create(id: undefined | string, config: Config): Promise<Server> {\n    const peer = await create_peer(id as PeerID);\n    return new Server(peer.id, peer, config);\n  }\n\n  private broadcast_json(msg: any, exclude: string | null = null) {\n    for (let [label, c] of this.clients) {\n      if(label !== exclude)\n        c.send(msg);\n    }\n  }\n\n  send(msg: any) {\n    this.broadcast_json(msg);\n  }\n\n  sendTo(label: string, msg: any) {\n    this.clients.get(label)!.send(msg);\n  }\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst sleep = (m: number) => new Promise(r => setTimeout(r, m))\nexport const issueToast = createAsyncThunk('toast/issue', async (msg: string, { dispatch }) => {\n  const id = Date.now();\n  dispatch(addToast({ id: Date.now(), msg }));\n  await sleep(5000);\n  dispatch(removeToast(id));\n});\n\nexport const toast = createSlice({\n  name: 'toast',\n  initialState: {\n    toasts: [] as { id: number, msg: string }[]\n  },\n  reducers: {\n    addToast(state, { payload }: { payload: { id: number, msg: string } }) {\n      state.toasts.push(payload);\n    },\n    removeToast(state, { payload }: { payload: number }) {\n      state.toasts = state.toasts.filter(t => t.id !== payload)\n    }\n  }\n})\n\nexport default toast.reducer;\nexport const { addToast, removeToast } = toast.actions;","import { v4 as uuid } from \"uuid\"\n\n// Provides a strongly-typed interface to our session variables \n\nconst defaults = {\n  // Denotes whether the user is currently hosting\n  was_hosting: () => null as null | string,\n  // Denote the session-specific comms_id\n  comms_id: uuid,\n  // The most recently entered player name\n  player_name: () => null as null | string,\n  // game data\n  game: () => null,\n}\n\ntype SessionMap = typeof defaults;\nexport const Session = {\n  get<K extends keyof SessionMap>(key: K): ReturnType<SessionMap[K]> {\n    const item = sessionStorage.getItem(key);\n    if (item) {\n      return JSON.parse(item);\n    }\n\n    const def = defaults[key]() as ReturnType<SessionMap[K]>;\n    sessionStorage.setItem(key, JSON.stringify(def));\n    return def;\n  },\n\n  set<K extends keyof SessionMap>(key: K, v: ReturnType<SessionMap[K]>) {\n    sessionStorage.setItem(key, JSON.stringify(v))\n  }\n}","import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\nimport { Client } from \"./client\";\nimport { Server, ServerClient } from \"./server\";\nimport { issueToast } from \"../toast\";\nimport { syncAction } from \"../sync\";\nimport { PeerID } from \"./peer\";\nimport { forkGame, loadGame } from \"../game\";\nimport { RootStore } from \"../../store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Session } from \"../../storage/session\";\n\nexport let state = {\n  conn: null as null | ServerClient\n}\n\nexport type ConnId = string & {\n  _connId: 'connid' \n} \n\nexport const connect = createAsyncThunk('comms/connect', async (gameId: PeerID, { dispatch }) => {\n  try {\n    state.conn = await Client.create(gameId, {\n      onMessage(m: any) {\n        dispatch(m);\n      },\n      onDisconnect() {\n        dispatch(comms.actions.disconnected())\n      },\n      onConnect(c) {\n        dispatch(comms.actions.connected())\n        console.log(\"connected to server!\")\n      }\n    });\n    return gameId;\n  }\n  catch(e) {\n    dispatch(issueToast(\"joinFailure\"));\n    throw e;\n  }\n});\n\nexport const host = createAsyncThunk('comms/host', async (_: undefined, { getState, dispatch }) => {\n  const server = await Server.create((getState() as RootStore).comms.clientId, {\n    onConnect(label) {\n      server.sendTo(label, syncAction(getState() as any))\n    },\n    onMessage(m) {\n      dispatch(m);\n    }\n  });\n  \n  state.conn = server;\n  Session.set('was_hosting', server.id);\n  dispatch(forkGame(server.id));\n  window.history.pushState(null, \"\", `?game=${server.id}`)\n  return server.id;\n});\n\nexport let comms = createSlice({\n  name: 'comms',\n  initialState: {\n    // NOTE: offline denotes a totally offline game, not a disconnected state\n    status: 'offline' as 'offline' | 'pending' | 'connected',\n    hosting: false,\n    clientId: Session.get('comms_id'),\n    gameId: null as string | null,\n  },\n  reducers: {\n    disconnected(state, action: {}) {\n      state.status = \"pending\";\n    },\n    connected(state, action: {}) {\n      state.status = \"connected\";\n    }\n  },\n  extraReducers: builder => {\n    // Client connection logic\n    builder.addCase(connect.pending, (state, _) => {\n      state.status = 'pending';\n    })\n    builder.addCase(connect.fulfilled, (state, { payload }) => {\n      state.gameId = payload;\n      state.status = 'connected'; \n    })\n    builder.addCase(connect.rejected, (state, _) => {\n      state.status = 'offline';\n    })\n\n    // Hosting events\n    builder.addCase(host.pending, (state, _) => {\n      state.status = 'pending';\n    })\n    builder.addCase(host.fulfilled, (state, {payload}) => {\n      state.status = 'connected';\n      state.gameId = payload;\n      state.hosting = true;\n    })\n    builder.addCase(host.rejected, (state, _) => {\n      state.status = 'offline';\n    })\n  }\n})\n\nexport function shared<S, A>(f: (state: S, action: { payload: A }) => void): { reducer: (state: any, action: {payload: A}) => void,  prepare: (action: A) => any }{\n  return {\n    reducer: f as any,\n    prepare: a => ({\n      payload: a,\n      meta: state.conn ? {\n        shared: true,\n        src: state.conn.id\n      } : {},\n    })\n  }\n}\n\nexport default comms.reducer;","import { RootStore } from \"../store\";\n\nexport function syncAction(state: RootStore) {\n  return {\n    type: \"STATE_SYNC\",\n    payload: {\n      game: state.game,\n    },\n  };\n}\n\nexport function applySync(\n  state: RootStore,\n  action: ReturnType<typeof syncAction>\n): RootStore {\n  return {\n    ...state,\n    game: action.payload.game,\n  };\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { shared } from \"../comms\";\nimport { Coord, GridSpace, Offset } from \"./units\";\n\nexport type Image = {\n  id: string,\n  loc: Coord<GridSpace>,\n  dim: Offset<GridSpace>,\n  href: string\n}\nexport type GameState = typeof initialState;\nlet initialState = {\n  id: \"local\",\n  maps: [{\n    width: 15,\n    height: 10,\n    images: {} as { [id: string]: Image},\n  }]\n}\nexport let game = createSlice({\n  name: 'game',\n  initialState: initialState as typeof initialState,\n  reducers: {\n    forkGame(state, action: { payload: string }) {\n      state.id = action.payload;\n    },\n    loadGame(state, { payload }: { payload: GameState }) {\n      return payload;\n    },\n    setDimensions: shared((state: any, { payload }: { payload: { map: number, width: number, height: number } }) => {\n      const { map, width, height } = payload;\n        state.maps[map].width = width;\n        state.maps[map].height = height;\n    }),\n    addImage: shared((state: any, action: { payload: { map: number, img: Image } }) => {\n      const {map, img} = action.payload;\n      state.maps[map].images[img.id] = img;\n    }),\n    updateImage: shared((state: GameState, action: { payload: { map: number, id: string, img: Partial<Image> } }) => {\n      const {map, id, img} = action.payload;\n      state.maps[map].images[id] = {...state.maps[map].images[id], ...img}\n    }),\n    reset: shared((state: any, action: {payload: any}) => state = initialState)\n  }\n})\n\nexport default game.reducer;\nexport let { setDimensions, addImage, updateImage, reset, loadGame, forkGame } = game.actions;\n","import { PropsWithChildren, useRef, useState, memo } from \"react\";\nimport { Coord, add, floor, sub, GridSpace } from \"../../modules/game/units\";\nimport React from \"react\";\nimport Overlay from \"./Overlay\";\nimport \"./grid.css\";\nimport { Viewport, ViewportRef } from \"./Viewport\";\nimport useDrop from \"../util/useDrop\";\nimport { GridItem } from \"./GridItem\";\nimport SelectionBox from \"./SelectionBox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootStore } from \"../../store\";\nimport { addImage, Image, updateImage } from \"../../modules/game\";\n\nexport interface GridProps {\n  dimensions: [number, number];\n}\n\nasync function getDataURL(file: File): Promise<string> {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onload = () => resolve(reader.result as string);\n    reader.readAsDataURL(file);\n  })\n}\n\nfunction extractURLFromHTML(html: string): string | null {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n  return doc.querySelector(\"img\")?.src || null;\n}\nexport function Grid(props: PropsWithChildren<GridProps>) {\n  let dropLayer = useRef<HTMLDivElement>(null);\n  let selection = useRef<any>(null);\n  let [selectionOffset, setSelectionOffset] = useState<any>(null);\n  let viewport = useRef<ViewportRef>(null);\n  let hoverHint = useRef<HTMLDivElement>(null);\n  let items = useSelector((state: RootStore) => state.game.maps[0].images);\n  let dispatch = useDispatch();\n\n  let [dragging, drag, dragHandlers] = useDrop(\n    dropLayer,\n    (x, y) => {\n      if (hoverHint.current) {\n        let coords = viewport.current!.clientToGrid([x, y]);\n        hoverHint.current.style.left = Math.floor(coords[0] as number) + \"em\";\n        hoverHint.current.style.top = Math.floor(coords[1] as number) + \"em\";\n      }\n    },\n    async (ev) => {\n      let coords = viewport.current!.clientToGrid([ev.clientX, ev.clientY]);\n      let dataItems = ev.dataTransfer?.items ?? [];\n      let addItem = (s: string) => {\n        console.log(s);\n        let item = {\n          id: \"\" + Math.random(),\n          loc: [Math.floor(coords[0]), Math.floor(coords[1])],\n          dim: [1,1],\n          href: s,\n        };\n        dispatch(addImage({ map: 0, img: item as unknown as Image }));\n      };\n      console.log(\"DataItems\", dataItems.length)\n      for (let i = 0; i < dataItems.length; i++) {\n        console.log(dataItems[i].type)\n        if (dataItems[i].type.startsWith(\"image/\")) {\n          const dataURL = await getDataURL(dataItems[i].getAsFile()!);\n          addItem(dataURL);\n          return;\n        } if (dataItems[i].type === \"text/html\") {\n          dataItems[i].getAsString(s => addItem(extractURLFromHTML(s)!));\n          return;\n        }\n        if (dataItems[i].type === \"application/x-moz-file-promise-url\") {\n          dataItems[i].getAsString(addItem)\n          return;\n        } else if (dataItems[i].kind === \"string\") {\n          let t = dataItems[i].type;\n          dataItems[i].getAsString(s => console.log(t, s));\n        }\n      }\n    }\n  );\n  let gridDrag: Coord<GridSpace>;\n  if (dragging) {\n    gridDrag = viewport.current!.clientToGrid([drag.x, drag.y]);\n  }\n\n  return (\n    <div className=\"grid\" {...dragHandlers} ref={dropLayer}>\n      <Viewport\n        ref={viewport}\n        baseScalar={1}\n        baseUnit=\"in\"\n        width={props.dimensions[0]}\n        height={props.dimensions[1]}\n      >\n        {dragging ? (\n          <div\n            ref={hoverHint}\n            key=\"hover\"\n            style={{\n              position: \"absolute\",\n              left: Math.floor(gridDrag![0]) + \"em\",\n              top: Math.floor(gridDrag![1]) + \"em\",\n              width: \"1em\",\n              height: \"1em\",\n              background: \"#aaa\",\n            }}\n          ></div>\n        ) : null}\n        {Object.values(items).map((i) => (\n          <GridItem\n            key={i.id}\n            loc={\n              add(\n                i.loc,\n                selection.current?.id === i.id\n                  ? (selectionOffset as any)\n                  : [0, 0]\n              ) as any\n            }\n            dim={i.dim}\n            onPointerDown={(ev) => {\n              ev.preventDefault();\n              selection.current = i;\n              setSelectionOffset([0, 0]);\n            }}\n          >\n            <img\n              onDragStart={(ev) => ev.preventDefault()}\n              alt=\"\"\n              src={i.href}\n              style={{ display: \"block\", width: \"100%\", height: \"100%\" }}\n            />\n          </GridItem>\n        ))}\n        <Overlay width={props.dimensions[0]} height={props.dimensions[1]} />\n        {selection.current && (\n          <SelectionBox\n            key=\"\"\n            loc={\n              add(selectionOffset!, selection.current.loc) as any\n            }\n            dim={selection.current.dim}\n            onSelectionDrag={(coord) =>\n              setSelectionOffset(\n                floor(\n                  sub(viewport.current!.clientToGrid(coord), selection.current.loc)\n                )\n              )\n            }\n            onSelectionDrop={(coord) => {\n              const loc = floor(viewport.current!.clientToGrid(coord));\n              dispatch(updateImage({\n                map: 0,\n                id: selection.current.id,\n                img: {\n                  loc\n                }\n              }));\n              setSelectionOffset(null);\n              selection.current = null;\n            }}\n          />\n        )}\n      </Viewport>\n    </div>\n  );\n}\n\nexport default memo(Grid);\n","import { useState } from \"react\";\nexport interface DragState {\n  x: number,\n  y: number,\n}\n\nexport default function useDrop(\n  ref: React.RefObject<Element | null>,\n  onDrag: (x: number, y: number) => void,\n  onDrop: (ev: DragEvent) => void\n): [boolean, DragState, any] {\n  let [dragDepth, setDragDepth] = useState(0);\n  let [dragState, setDragState] = useState({\n    x: 0,\n    y: 0,\n  });\n  \n  const dropStub = (ev: DragEvent) => {\n    ev.preventDefault();\n    \n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(0);\n    setDragState({\n      x,\n      y,\n    });\n    onDrop(ev);\n  };\n  const onDragEnter = (ev: DragEvent) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(d => d + 1);\n    setDragState({\n      x,\n      y,\n    });\n  };\n  const onDragLeave = (ev: DragEvent) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(d => d - 1);\n    setDragState({\n      x,\n      y,\n    });\n    };\n  const onDragOver = (ev: DragEvent) => {\n    ev.preventDefault();\n    onDrag(ev.clientX, ev.clientY)\n  };\n    return [dragDepth > 0, dragState, {\n        onDragEnter,\n        onDragLeave,\n        onDragOver,\n        onDrop: dropStub,\n    }]\n}\n","import { PropsWithChildren } from \"react\";\nimport React from \"react\";\nimport \"./Toolbar.css\";\n\ninterface ToolbarProps {}\nfunction Toolbar(props: PropsWithChildren<ToolbarProps>) {\n    return (\n        <div className=\"toolbar\">\n            {props.children}\n        </div>);\n}\nexport default Toolbar","import { useSelector } from \"react-redux\"\nimport { RootStore } from \"../../store\";\nimport React from \"react\";\nimport \"./Toast.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\n\nexport function ToastArea(props: {}) {\n  const toasts = useSelector((state: RootStore) => state.toast.toasts);\n  const { t } = useTranslation();\n  return (<div className=\"toastArea\">\n    <AnimateSharedLayout>\n    {\n      toasts.map(toast =>\n        <motion.div className=\"toast\"\n          initial={{position: \"relative\", opacity: 0}} \n          animate={{position: \"relative\", opacity: 1}} \n          exit={{ position: \"relative\", opacity: 0 }} \n          layout\n          key={toast.id}\n        >\n          {t(toast.msg)}\n        </motion.div>\n      )\n      }\n    </AnimateSharedLayout>\n    </div>\n  )\n}","import React from \"react\";\nimport \"./Loading.css\";\n\nexport function Loading() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"double-bounce1\"></div>\n      <div className=\"double-bounce2\"></div>\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./grid2/Grid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Toolbar from \"./toolbar/Toolbar\";\nimport { Offset, GridSpace } from \"../modules/game/units\";\nimport { RootStore } from \"../store\";\nimport { host } from \"../modules/comms\";\nimport { setDimensions, reset } from \"../modules/game\";\nimport { ToastArea } from \"./toasts/ToastArea\";\nimport { issueToast } from \"../modules/toast\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loading } from \"./toolkit/Loading\";\nimport { JoinOverlay } from \"./JoinOverlay\";\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nfunction App() {\n  let comms = useSelector((state: RootStore) => {\n    console.log(state);\n    return state.comms\n  });\n  let [curr_map, set_curr_map] = useState(() => 0);\n  let dim = useSelector((state: RootStore) => [state.game.maps[curr_map].width, state.game.maps[curr_map].height])\n  let dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"App\">\n      {/* <JoinOverlay /> */}\n      <ToastArea />\n      <Grid dimensions={dim as Offset<GridSpace>} />\n      <Toolbar>\n        <button onClick={() => dispatch(setDimensions({map: curr_map, width: dim[0] + 1, height: dim[1]}))}>Add Column</button>\n        <button onClick={() => dispatch(setDimensions({map: curr_map, width: dim[0], height: dim[1] + 1}))}>Add Row</button>\n        <button onClick={() => dispatch(reset({}))}>Reset</button>\n        <button onClick={() => dispatch(issueToast(t(\"hello\")))}>Say hi</button>\n        {comms.status === 'offline' && (\n          <button onClick={() => dispatch(host())}>Host</button>\n        )}\n        {comms.status === 'pending' && (\n          <Loading />\n        )}\n\n        {comms.hosting && `hosting: ${comms.gameId}`}\n      </Toolbar>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { Session } from \"../storage/session\";\nimport { shared } from \"./comms\";\n\nexport const players = createSlice({\n  name: \"players\",\n  initialState: {\n    local: null as null | string,\n    others: {} as {[id: string]: Player}\n  },\n  reducers: {\n    addPlayer: shared((state: any, action: { payload: Player }) => {\n      state.all[action.payload.id] = action.payload;\n    }),\n    setLocalPlayer(state, action: { payload: string }) {\n      state.local = action.payload\n      Session.set('player_name', action.payload)\n    }\n  },\n})\n\nexport default players.reducer;\nexport const { addPlayer, setLocalPlayer } = players.actions;\n\nexport type Player = {\n  name: string,\n  id: string\n}\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport comms, {state} from './modules/comms'\nimport game from './modules/game'\nimport toast from './modules/toast'\nimport players from './modules/players'\nimport { applySync } from './modules/sync';\nimport { persistState } from './modules/game/persist';\n\nconst mainReducer = combineReducers({ comms, game, toast, players });\nexport type RootStore = ReturnType<typeof mainReducer>;\n\nconst initialState: RootStore = mainReducer(undefined, { type: 'null' });\n\nconst store = configureStore({\n  reducer(state, action): ReturnType<typeof mainReducer> {\n    if (action.type === 'STATE_SYNC') {\n      return applySync(state, action as any);\n    }\n    return mainReducer(state, action);\n  },\n  middleware: m => [...m(), api => next => action => {\n    // Send out all actions that originated on this peer\n    // if we didn't check that it came from this peer, we'd\n    // bounce messages back and forth forever\n    console.log(\"connection?\", state.conn);\n    state.conn && action.meta?.shared && action.meta?.src === state.conn?.id && state.conn.send(action);\n    return next(action);\n  }],\n  preloadedState: initialState,\n})\n\nstore.subscribe(() => {\n  const state = store.getState() as RootStore;\n  console.log(state);\n  persistState(state.game.id, state.game);\n});\n\nexport default store;","import { GameState } from \".\";\n\n\nexport function gameState(id: string) {\n  const item = sessionStorage.getItem(id);\n  return item ? JSON.parse(item) : null;\n}\n\nexport function persistState(id: string, state: GameState) {\n  sessionStorage.setItem(id, JSON.stringify(state))\n}","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n \nimport Backend from 'i18next-xhr-backend';\n \ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n \n    lng: 'en',\n    fallbackLng: 'en',\n    whitelist: ['en', 'de'],\n \n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: '/battlegrid/locales/{{lng}}/{{ns}}.json',\n    },\n  });\n \nexport default i18n;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { loadGame } from './modules/game';\nimport store from './store'\nimport { connect, host } from './modules/comms';\nimport './i18n';\nimport { gameState } from './modules/game/persist';\nimport { PeerID } from './modules/comms/peer';\nimport { Session } from './storage/session';\n//import * as serviceWorker from './serviceWorker';\n\nconst urlParams = new URLSearchParams(window.location.search);\n\n// Load the game if we have it stored\nconst game = urlParams.get(\"game\");\nlet state = gameState(game ?? \"local\");\nif (state) {\n  store.dispatch(loadGame(state))\n}\n// If we found saved data\nif (game) {\n  console.log(\"Found game: \", game);\n  if (Session.get('was_hosting') === game) {\n    console.log(\"REHOSTING!\");\n    store.dispatch(host());\n  } else {\n    console.log(\"Huh\")\n    store.dispatch(connect(game as PeerID));\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={null}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}