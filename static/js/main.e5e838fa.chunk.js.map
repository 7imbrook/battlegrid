{"version":3,"sources":["../node_modules/peerjs/dist sync","modules/grid/units.ts","components/grid2/Overlay.tsx","components/grid2/Viewport.tsx","components/grid2/GridItem.tsx","components/grid2/SelectionBox.tsx","modules/comms/client.ts","modules/comms/server.ts","modules/toast.ts","modules/comms/index.ts","modules/sync.ts","modules/grid/index.ts","components/grid2/Grid.tsx","components/util/useDrop.ts","components/toolbar/Toolbar.tsx","components/toasts/ToastArea.tsx","components/toolkit/Loading.tsx","components/App.tsx","store.ts","i18n.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","coord","ev","clientX","clientY","floor","a","map","Math","add","b","clamp","val","min","max","React","memo","props","style","position","left","right","top","bottom","background","pointerEvents","border","thickness","transition","Viewport","forwardRef","ref","viewport","useRef","canvas","transform","scale","offset","setTransform","f","apply","newT","current","newOffset","width","height","fontSize","baseScalar","baseUnit","scrollTo","initialScale","pinch","useGesture","onPinchEnd","onPinch","state","event","preventDefault","stopPropagation","newScale","deltaY","client_origin","origin","clientToGrid","delta","da","initial","oldScale","t","performZoom","onPinchStart","useCallback","domTarget","eventOptions","passive","capture","useEffect","rect","getBoundingClientRect","useImperativeHandle","scroll","onScrollEnd","scrollLeft","scrollTop","className","children","GridItem","div","type","ease","duration","animate","loc","dim","SelectionBox","initialLoc","onPointerMove","onSelectionDrag","onPointerUp","onSelectionDrop","boxShadow","onPointerDown","currentTarget","setPointerCapture","pointerId","onPointerMoveCapture","onPointerUpCapture","Client","peer","server","config","this","on","d","onMessage","console","error","msg","send","serverId","Peer","undefined","debug","connected","Promise","reject","connect","reliable","client","setTimeout","onConnect","Server","clients","Map","conn","label","set","onDisconnect","broadcast_json","exclude","c","get","sleep","m","r","issueToast","createAsyncThunk","dispatch","Date","now","addToast","removeToast","toast","createSlice","name","initialState","toasts","reducers","payload","push","filter","actions","gameId","log","host","_","getState","create","sendTo","grid","window","history","pushState","shared","reducer","prepare","meta","src","comms","status","hosting","extraReducers","builder","addCase","pending","fulfilled","rejected","images","slice","setDimensions","addImage","action","updateImage","img","reset","gridDrag","dropLayer","selection","useState","selectionOffset","setSelectionOffset","hoverHint","items","useSelector","useDispatch","onDrag","onDrop","dragDepth","setDragDepth","x","y","dragState","setDragState","onDragEnter","onDragLeave","onDragOver","useDrop","coords","dataItems","dataTransfer","addItem","s","i","item","random","href","length","kind","startsWith","URL","createObjectURL","getAsFile","getAsString","dragging","drag","dragHandlers","dimensions","key","Object","values","onClick","onDragStart","alt","display","Toolbar","ToastArea","useTranslation","opacity","exit","layout","Loading","App","mainReducer","combineReducers","storedState","localStorage","getItem","JSON","parse","store","configureStore","applySync","middleware","api","next","preloadedState","subscribe","setItem","stringify","i18n","use","Backend","initReactI18next","init","lng","fallbackLng","whitelist","interpolation","escapeValue","backend","loadPath","game","URLSearchParams","location","search","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.e5e838fa.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 50;","export type GridSpace = \"gridspace\";\nexport type CanvasSpace = \"canvasspace\";\nexport type ClientSpace = \"clientspace\";\n\ninterface Unit<T> {\n    _unitBrand: T\n}\nexport type Coord<T> = [number, number] & Unit<'coord'>\nexport type Offset<T> = [number, number] & Unit<'offset'>\nexport type Pair<T> = Coord<T> | Offset<T>\n\nexport function coord(ev: {clientX: number, clientY: number}): Coord<ClientSpace> {\n    return [ev.clientX, ev.clientY] as Coord<ClientSpace> \n}\n\nexport function floor<T extends [number, number] > (a: T): T {\n    return a.map(Math.floor) as T\n}\n\nexport function trunc<T extends [number, number] > (a: T): T {\n    return a.map(n => n < 0 ? Math.ceil(n) : Math.floor(n)) as T\n}\n\n\nexport function add<T>(a: Offset<T>, b: Offset<T>): Offset<T>;\nexport function add<T>(a: Coord<T>, b: Offset<T>): Coord<T>\nexport function add<T>(a: [number, number], b: [number,number]): [number,number] {\n    return [a[0] + b[0], a[1] + b[1]] as any;\n}\n\nexport function sub<T>(a: Offset<T>, b: Offset<T>): Offset<T>;\nexport function sub<T>(a: Coord<T>, b: Offset<T>): Coord<T>\nexport function sub<T>(a: Coord<T>, b: Coord<T>): Offset<T>\nexport function sub<T>(a: [number, number], b: [number,number]): [number,number] {\n    return [a[0] - b[0], a[1] - b[1]] as any;\n}\n\nexport function clamp(val: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, val));\n}\n\nexport function coord_clamp<T, P extends Pair<T>>(val: P, min: [number, number], max: [number, number]): P {\n    return [\n        Math.max(min[0], Math.min(max[0], val[0])),\n        Math.max(min[1], Math.min(max[1], val[1])),\n    ] as P;\n}","import React from \"react\";\nimport { Coord, GridSpace } from \"../../modules/grid/units\";\n\nexport interface OverlayProps {\n  width: number,\n  height: number,\n  onDrop?: (coord: Coord<GridSpace>) => void;\n}\n\nconst thickness = 0.05\nconst linecolor = \"gray\"\nfunction Overlay(props: OverlayProps) {\n  return (<div style={{\n    position: \"absolute\",\n    left: `${-thickness/2}em`,\n    right: `${-thickness/2}em`,\n    top: `${-thickness/2}em`,\n    bottom: `${-thickness/2}em`,\n    background: `\n      repeating-linear-gradient(to right, ${linecolor}, ${linecolor} ${thickness}em, transparent ${thickness}em 1em),\n      repeating-linear-gradient(to bottom, ${linecolor}, ${linecolor} ${thickness}em, transparent ${thickness}em 1em)`,\n      // repeating-linear-gradient(to right, ${linecolor}, ${linecolor} ${thickness / 2}em, transparent ${thickness / 2}em ${1 - thickness / 2}em, ${linecolor} ${1 - thickness / 2}em 1em),\n      // repeating-linear-gradient(to bottom, ${linecolor}, ${linecolor} ${thickness / 2}em, transparent ${thickness / 2}em ${1 - thickness / 2}em, ${linecolor} ${1 - thickness / 2}em 1em)`,\n    pointerEvents: \"none\",\n    border: `${thickness/2} solid ${linecolor}`,\n    transition: \"position 2s\" \n  }}></div>\n  );\n}\nexport default React.memo(Overlay);","import { useRef, useCallback, PropsWithChildren, ForwardRefRenderFunction, useImperativeHandle, forwardRef, memo, useEffect } from \"react\";\nimport { Coord, clamp, GridSpace } from \"../../modules/grid/units\";\nimport { useGesture } from \"react-use-gesture\";\nimport { FullGestureState } from \"react-use-gesture/dist/types\";\n\n\nimport React from \"react\";\n\nexport interface ViewportProps {\n  baseScalar: number,\n  baseUnit: string,\n  height: number,\n  width: number,\n}\n\nconst minScale = 0.2;\nconst maxScale = 2;\n\nexport interface ViewportRef {\n  clientToGrid(coord: [number, number]): Coord<GridSpace>\n}\n\nexport interface Transform {\n  scale: number,\n  offset: Coord<GridSpace>,\n}\n\nexport const ViewportElem: ForwardRefRenderFunction<ViewportRef, PropsWithChildren<ViewportProps>> = (props, ref) => {\n  const viewport = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLDivElement>(null);\n\n  const transform = useRef<Transform>({\n    scale: 1,\n    offset: [0, 0] as Coord<GridSpace>,\n  });\n\n  const setTransform = (f: (t: Transform) => Transform, apply=true) => {\n    const newT = f(transform.current);\n    const newOffset = [\n      clamp(newT.offset[0], 0, props.width),\n      clamp(newT.offset[1], 0, props.height)\n    ]\n    transform.current = {\n      scale: newT.scale,\n      offset: newOffset as any,\n    }\n      ;\n    \n    if (apply) {\n      viewport.current!.style.fontSize = `${transform.current.scale * props.baseScalar}${props.baseUnit}`\n      viewport.current!.scrollTo(transform.current.offset[0] * 96 * transform.current.scale, transform.current.offset[1] * transform.current.scale * 96)\n\n    }\n  }\n    // Does fancy math to zoom around a mouse location. Location given relative to viewport\n    const performZoom = \n      (origin: Coord<GridSpace>, oldScale: number, newScale: number) => {\n        const delta = clamp(newScale - oldScale, -0.05, 0.05);\n        newScale = clamp(oldScale + delta, minScale, maxScale);\n        // if we don't return early, we'll end up sliding around\n        if (newScale === oldScale) {\n          return;\n        }\n        setTransform(t => {\n          ;\n          return {\n            scale: newScale,\n            offset: [\n                t.offset[0] - (t.offset[0] - origin[0]) * delta / oldScale,\n                t.offset[1] - (t.offset[1] - origin[1]) * delta / oldScale,\n            ] as Coord<GridSpace>\n          }\n        });\n      }\n      \n    // const drag = useDrag((state) => {\n    //   if (state.buttons !== 1) {\n    //     return;\n    //   }\n    //   setTransform(t => {\n    //     ;\n    //     let o = clientToGrid(sub(state.initial as Offset<ViewSpace>, state.delta as Offset<ViewSpace>));\n    //     o = coord_clamp(\n    //       o,\n    //       [0, 0],\n    //       [\n    //         props.width, props.height\n    //       ]\n    //     );\n    //     return {\n    //       ...t,\n    //       offset: o\n    //     };\n    //   });\n    // });\n  \n    const initialScale = useRef(1);\n    const pinch = useGesture(\n      {\n        onPinchEnd: () => {\n          initialScale.current = transform.current.scale;\n        },\n        onPinch: \n          (state: FullGestureState<\"pinch\">) => {\n            state.event?.preventDefault();\n            state.event?.stopPropagation();\n            ;\n            //@ts-ignore\n            const deltaY = state.event?.deltaY\n            //@ts-ignore\n            const client_origin = state.origin || [state.event!.clientX, state.event!.clientY] \n            ;\n            const origin =\n              clientToGrid(client_origin);\n            let newScale: number;\n            if (deltaY) {\n              let delta = -1 * deltaY * 0.05 * transform.current.scale;\n              newScale = transform.current.scale + delta;\n            } else {\n              newScale = (state.da[0] / state.initial[0] - 1) + initialScale.current!;\n            }\n            performZoom(\n              origin,\n              transform.current.scale,\n              newScale\n            );\n          },\n        onPinchStart: useCallback(\n          (state: FullGestureState<\"pinch\">) => {\n            state.event?.preventDefault();\n            state.event?.stopPropagation();\n            ;\n            initialScale.current = transform.current.scale;\n            ;\n          },\n          [transform]\n        ),\n      },\n      {\n        domTarget: viewport,\n        eventOptions: {\n          passive: false,\n          capture: true,\n        },\n      }\n    );\n  //@ts-ignore\n  useEffect(pinch, [pinch]);\n  \n  const clientToGrid = (coord: [number, number]): Coord<GridSpace> => {\n     \n      const rect = canvas.current!.getBoundingClientRect();\n    ;\n    ;\n      return [\n        (coord[0] - rect.left) / 96 / transform.current.scale,\n        (coord[1] - rect.top) / 96 / transform.current.scale,\n      ] as Coord<GridSpace>;\n    }\n  \n  useImperativeHandle(ref, () => ({\n    clientToGrid,\n  }), []);\n\n    // Wheel must come first to prevent its use by pinch,\n    // because the logic for how to zoom on each is different\n    const scroll = useGesture({\n      onScrollEnd(state: FullGestureState<'scroll'>) {\n        ;\n        setTransform(t => ({\n          ...t,\n          offset: [viewport.current!.scrollLeft / 96 / transform.current.scale, viewport.current!.scrollTop / 96 / transform.current.scale] as any,\n        }), false);\n      },\n    });\n    return (\n      <div className=\"viewport\" {...scroll()} ref={viewport} style={{\n          fontSize: `${transform.current.scale * props.baseScalar}${props.baseUnit}`,\n      }}>\n        <div className=\"padding\" >\n        <div ref={canvas}\n          className=\"gridsvg\"\n                style={{\n                  width: `${props.width}em`,\n                  height: `${props.height}em`,\n                  position: \"relative\",\n                }}>\n                {props.children}\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport const Viewport = memo(forwardRef(ViewportElem));","import { Coord, Offset, GridSpace } from \"../../modules/grid/units\";\nimport { PropsWithChildren, memo } from \"react\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport interface GridItemProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  loc: Coord<GridSpace>,\n  dim: Offset<GridSpace>,\n  style?: Omit<React.CSSProperties, 'position' | 'left' | 'top' | 'width' | 'height'>,\n}\n\nexport const GridItem = memo((props: PropsWithChildren<GridItemProps>) => {\n  return (\n    <motion.div\n      {...props as any}\n      style={{\n        position: \"absolute\",\n        ...props.style,\n      }}\n      initial={false}\n      transition={{type: \"tween\", ease: \"easeOut\", duration: 0.2}}\n      animate={{\n        left: props.loc[0] + \"em\",\n        top: props.loc[1] + \"em\",\n        width: props.dim[0] + \"em\",\n        height: props.dim[1] + \"em\",\n      }}\n      >\n      {props.children}\n    </motion.div>\n  )\n});","import { useRef, useCallback } from \"react\";\nimport { GridItemProps, GridItem } from \"./GridItem\";\nimport React, {PointerEvent} from \"react\";\nimport { ClientSpace, Coord, coord } from \"../../modules/grid/units\";\n\ninterface SelectionProps extends GridItemProps {\n  onSelectionDrag: (offset: Coord<ClientSpace>) => void,\n  onSelectionDrop: (offset: Coord<ClientSpace>) => void,\n}\n\nfunction SelectionBox(props: SelectionProps) {\n  const initialLoc = useRef<Coord<ClientSpace> | null>(null)\n  // Represents the distance in client pixels from selection element origin to click point\n  const onPointerMove = useCallback((ev: PointerEvent<HTMLElement>) => {\n      if (initialLoc.current) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          \n          props.onSelectionDrag(coord(ev));\n      }\n  }, [props])\n  const onPointerUp = useCallback((ev) => {\n      if (initialLoc.current !== null) {\n          ev.preventDefault();\n        ev.stopPropagation();\n        ;\n          //(ev.currentTarget as HTMLDivElement).releasePointerCapture(ev.pointerId);\n          props.onSelectionDrop(coord(ev));\n        initialLoc.current = null;\n      }\n  }, [props])\n  return (\n    <GridItem\n      loc={props.loc} \n      dim={props.dim}\n      style={{\n        border: \"2px solid highlight\",\n        boxShadow: \"0 0 10px highlight\"\n      }}\n      onPointerDown={ev => {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    \n        ev.currentTarget.setPointerCapture(ev.pointerId);\n        initialLoc.current = coord(ev);\n      }}\n      onPointerMoveCapture={onPointerMove}\n      onPointerUpCapture={onPointerUp}\n    ></GridItem>\n  )\n}\n\nexport default SelectionBox;","import Peer from \"peerjs\";\nimport { ServerClient } from \"./server\";\n\n\nexport type ClientConfig = {\n  onConnect(self: Client): void\n  onMessage(msg: any): void\n}\n\nexport class Client implements ServerClient {\n  private server: Peer.DataConnection;\n  private peer: Peer;\n  get id(): string {\n    return this.peer.id;\n  }\n  private constructor(peer: Peer, server: Peer.DataConnection, config: ClientConfig) {\n    this.server = server;\n    this.peer = peer;\n    this.server.on('data', d => {\n      config.onMessage(d)\n    })\n    this.server.on('error', e => {\n      console.error(e)\n    })\n  }\n\n  static async connect(serverId: string, config: ClientConfig): Promise<Client> {\n    const peer = new Peer(undefined, {debug: 3});\n    let connected = false;\n    return new Promise((resolve, reject) => {\n      peer.on('open', id => {\n        const server = peer.connect(serverId, {reliable: true,});\n        server.on(\"open\", () => {\n          connected = true;\n          let client = new Client(peer, server, config);\n          setTimeout(() => config.onConnect(client), 0)\n          resolve(client);\n        });\n        server.on(\"error\", (e) => {\n          !connected && reject(`Error connecting to game host: ${e}`)\n        });\n      });\n      peer.on(\"error\", (e) => {\n        !connected && reject(`Error connecting to signaling server: ${e}`)\n      })\n    });\n  }\n\n  send(msg: any) {\n    this.server.send(msg);\n  }\n} ","import Peer from \"peerjs\";\nimport { ConnId } from \".\";\n\ntype Config = {\n  onConnect?(label: ConnId): void\n  onDisconnect?(label: ConnId): void\n  onMessage?(msg: any): void\n}\n\nexport interface ServerClient {\n  send(msg: any): void;\n  readonly id: string,\n}\n\n\nexport class Server implements ServerClient {\n  private peer: Peer;\n  private clients: Map<string, Peer.DataConnection>;\n  readonly id: string;\n\n  private constructor(id: string, peer: Peer, config: Config) {\n    this.peer = peer;\n    this.id = id;\n    this.clients = new Map();\n\n    this.peer.on('connection', conn => {\n      conn.on('open', () => {\n        const label = conn.label as ConnId;\n        this.clients.set(label, conn);\n        config.onConnect && config.onConnect(label);\n        config.onDisconnect && conn.on('close', () => {\n          config.onDisconnect!(label)\n        })\n        conn.on('data', d => {\n          this.broadcast_json(d, conn.label)\n          config.onMessage && config.onMessage(d);\n        });\n      })\n    })\n\n    this.peer.on('disconnected', () => {\n      console.error(\"ACK! Disconnect from signaler.\")\n    })\n  }\n\n  static async create(config: Config): Promise<Server> {\n    const peer = new Peer(undefined, { debug: 3 });\n    let connected = false;\n    return new Promise((resolve, reject) => {\n      peer.on(\"open\", id => {\n        connected = true;\n        resolve(new Server(id, peer, config))\n      });\n      peer.on(\"error\", e => {\n        connected && reject(`Failed to create server: ${e}`)\n      })\n    })\n  }\n\n  private broadcast_json(msg: any, exclude: string | null = null) {\n    for (let [label, c] of this.clients) {\n      if(label !== exclude)\n        c.send(msg);\n    }\n  }\n\n  send(msg: any) {\n    this.broadcast_json(msg);\n  }\n\n  sendTo(label: string, msg: any) {\n    this.clients.get(label)!.send(msg);\n  }\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst sleep = (m: number) => new Promise(r => setTimeout(r, m))\nexport const issueToast = createAsyncThunk('toast/issue', async (msg: string, { dispatch }) => {\n  const id = Date.now();\n  dispatch(addToast({ id: Date.now(), msg }));\n  await sleep(5000);\n  dispatch(removeToast(id));\n});\n\nexport const toast = createSlice({\n  name: 'toast',\n  initialState: {\n    toasts: [] as { id: number, msg: string }[]\n  },\n  reducers: {\n    addToast(state, { payload }: { payload: { id: number, msg: string } }) {\n      state.toasts.push(payload);\n    },\n    removeToast(state, { payload }: { payload: number }) {\n      state.toasts = state.toasts.filter(t => t.id !== payload)\n    }\n  }\n})\n\nexport default toast.reducer;\nexport const { addToast, removeToast } = toast.actions;","import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\nimport { Client } from \"./client\";\nimport { Server, ServerClient } from \"./server\";\nimport { issueToast } from \"../toast\";\nimport { syncAction } from \"../sync\";\n\nexport const state = {\n  conn: null as null | ServerClient\n}\n\nexport type ConnId = string & {\n  _connId: 'connid' \n} \n\nexport const connect = createAsyncThunk('comms/connect', async (gameId: string, { dispatch }) => {\n  try {\n    state.conn = await Client.connect(gameId, {\n      onMessage(m: any) {\n        dispatch(m);\n      },\n      onConnect(c) {\n        console.log(\"connected to server!\")\n      }\n    });\n    return gameId;\n  }\n  catch(e) {\n    dispatch(issueToast(\"joinFailure\"));\n    throw e;\n  }\n});\n\nexport const host = createAsyncThunk('comms/host', async (_: undefined, {getState, dispatch}) => {\n  const server = await Server.create({\n    onConnect(label) {\n      server.sendTo(label, syncAction(getState() as any))\n    },\n    onMessage(m) {\n      dispatch(m);\n    }\n  })\n  state.conn = server;\n  window.history.pushState({}, \"\", `?join=${server.id}`)\n  return server.id;\n});\n\nexport let comms = createSlice({\n  name: 'comms',\n  initialState: {\n    status: 'offline' as 'offline' | 'pending' | 'connected',\n    hosting: false,\n    gameId: null as string | null,\n  },\n  reducers: {},\n  extraReducers: builder => {\n    // Client connection logic\n    builder.addCase(connect.pending, (state, _) => {\n      state.status = 'pending';\n    })\n    builder.addCase(connect.fulfilled, (state, { payload }) => {\n      state.gameId = payload;\n      state.status = 'connected'; \n    })\n    builder.addCase(connect.rejected, (state, _) => {\n      state.status = 'offline';\n    })\n\n    // Hosting events\n    builder.addCase(host.pending, (state, _) => {\n      state.status = 'pending';\n    })\n    builder.addCase(host.fulfilled, (state, {payload}) => {\n      state.status = 'connected';\n      state.gameId = payload;\n      state.hosting = true;\n    })\n    builder.addCase(host.rejected, (state, _) => {\n      state.status = 'offline';\n    })\n  }\n})\n\nexport function shared<S, A>(f: (state: S, action: { payload: A }) => void): { reducer: typeof f, prepare: (action: A) => any }{\n  return {\n    reducer: f,\n    prepare: a => ({\n      payload: a,\n      meta: state.conn ? {\n        shared: true,\n        src: state.conn.id\n      } : {},\n    })\n  }\n}\n\nexport default comms.reducer;","import { RootStore } from \"../store\";\n\nexport function syncAction(state: RootStore) {\n  return {\n    type: \"STATE_SYNC\",\n    payload: {\n      grid: state.grid,\n    },\n  };\n}\n\nexport function applySync(\n  state: RootStore,\n  action: ReturnType<typeof syncAction>\n): RootStore {\n  return {\n    ...state,\n    grid: action.payload.grid,\n  };\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { shared } from \"../comms\";\nimport { Coord, GridSpace, Offset } from \"./units\";\n\nexport type Image = {\n  id: string,\n  loc: Coord<GridSpace>,\n  dim: Offset<GridSpace>,\n  href: string\n}\n\nconst initialState = {\n  width: 15,\n  height: 10,\n  images: {} as { [id: string]: Image},\n}\nexport const slice = createSlice({\n  name: 'grid',\n  initialState: initialState as typeof initialState,\n  reducers: {\n    setDimensions: shared((state: {width: number, height: number}, { payload }: { payload: { width: number, height: number } }) => {\n        state.width = payload.width;\n        state.height = payload.height;\n    }),\n    addImage: shared((state: any, action: { payload: Image }) => {\n      state.images[action.payload.id] = action.payload;\n    }),\n    updateImage: shared((state: any, action: { payload: { id: string, img: Image } }) => {\n      state.images[action.payload.id] = action.payload.img;\n    }),\n    reset: shared((state: any, action: {payload: any}) => state = initialState)\n  }\n})\n\nexport default slice.reducer;\nexport let { setDimensions, addImage, updateImage, reset } = slice.actions;","import { PropsWithChildren, useRef, useState, memo } from \"react\";\nimport { Coord, add, floor, sub, GridSpace } from \"../../modules/grid/units\";\nimport React from \"react\";\nimport Overlay from \"./Overlay\";\nimport \"./grid.css\";\nimport { Viewport, ViewportRef } from \"./Viewport\";\nimport useDrop from \"../util/useDrop\";\nimport { GridItem } from \"./GridItem\";\nimport SelectionBox from \"./SelectionBox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootStore } from \"../../store\";\nimport { addImage, Image, updateImage } from \"../../modules/grid\";\n\nexport interface GridProps {\n  dimensions: [number, number];\n}\n\nexport function Grid(props: PropsWithChildren<GridProps>) {\n  let dropLayer = useRef<HTMLDivElement>(null);\n  let selection = useRef<any>(null);\n  let [selectionOffset, setSelectionOffset] = useState<any>(null);\n  let viewport = useRef<ViewportRef>(null);\n  let hoverHint = useRef<HTMLDivElement>(null);\n  let items = useSelector((state: RootStore) => state.grid.images);\n  let dispatch = useDispatch();\n\n  let [dragging, drag, dragHandlers] = useDrop(\n    dropLayer,\n    (x, y) => {\n      if (hoverHint.current) {\n        let coords = viewport.current!.clientToGrid([x, y]);\n        hoverHint.current.style.left = Math.floor(coords[0] as number) + \"em\";\n        hoverHint.current.style.top = Math.floor(coords[1] as number) + \"em\";\n      }\n    },\n    (ev) => {\n      let coords = viewport.current!.clientToGrid([ev.clientX, ev.clientY]);\n      let dataItems = ev.dataTransfer?.items ?? [];\n      let addItem = (s: string, i: number) => {\n        let item = {\n          id: \"\" + Math.random(),\n          loc: [Math.floor(coords[0]) + i, Math.floor(coords[1])],\n          dim: [1,1],\n          href: s,\n        };\n        dispatch(addImage(item as unknown as Image));\n      };\n      for (let i = 0; i < dataItems.length; i++) {\n        if (dataItems[i].kind.startsWith(\"image/\")) {\n          addItem(window.URL.createObjectURL(dataItems[i].getAsFile()), 0);\n        } else if (dataItems[i].type === \"text/uri-list\") {\n          dataItems[i].getAsString((s) => addItem(s, 0));\n        }\n      }\n    }\n  );\n  let gridDrag: Coord<GridSpace>;\n  if (dragging) {\n    gridDrag = viewport.current!.clientToGrid([drag.x, drag.y]);\n  }\n\n  return (\n    <div className=\"grid\" {...dragHandlers} ref={dropLayer}>\n      <Viewport\n        ref={viewport}\n        baseScalar={1}\n        baseUnit=\"in\"\n        width={props.dimensions[0]}\n        height={props.dimensions[1]}\n      >\n        {dragging ? (\n          <div\n            ref={hoverHint}\n            key=\"hover\"\n            style={{\n              position: \"absolute\",\n              left: Math.floor(gridDrag![0]) + \"em\",\n              top: Math.floor(gridDrag![1]) + \"em\",\n              width: \"1em\",\n              height: \"1em\",\n              background: \"#aaa\",\n            }}\n          ></div>\n        ) : null}\n        {Object.values(items).map((i) => (\n          <GridItem\n            key={i.id}\n            loc={\n              add(\n                i.loc,\n                selection.current?.id === i.id\n                  ? (selectionOffset as any)\n                  : [0, 0]\n              ) as any\n            }\n            dim={i.dim}\n            onClick={() => {\n              selection.current = i;\n              setSelectionOffset([0, 0]);\n            }}\n          >\n            <img\n              onDragStart={(ev) => ev.preventDefault()}\n              alt=\"\"\n              src={i.href}\n              style={{ display: \"block\", width: \"100%\", height: \"100%\" }}\n            />\n          </GridItem>\n        ))}\n        <Overlay width={props.dimensions[0]} height={props.dimensions[1]} />\n        {selection.current && (\n          <SelectionBox\n            key=\"\"\n            loc={\n              add(selectionOffset!, selection.current.loc) as any\n            }\n            dim={selection.current.dim}\n            onSelectionDrag={(coord) =>\n              setSelectionOffset(\n                floor(\n                  sub(viewport.current!.clientToGrid(coord), selection.current.loc)\n                )\n              )\n            }\n            onSelectionDrop={(coord) => {\n              const loc = floor(viewport.current!.clientToGrid(coord));\n              dispatch(updateImage({\n                id: selection.current.id,\n                img: {\n                  ...items[selection.current.id],\n                  loc\n                }\n              }));\n              setSelectionOffset(null);\n              selection.current = null;\n            }}\n          />\n        )}\n      </Viewport>\n    </div>\n  );\n}\n\nexport default memo(Grid);\n","import { useState } from \"react\";\nexport interface DragState {\n  x: number,\n  y: number,\n}\n\nexport default function useDrop(\n  ref: React.RefObject<Element | null>,\n  onDrag: (x: number, y: number) => void,\n  onDrop: (ev: DragEvent) => void\n): [boolean, DragState, any] {\n  let [dragDepth, setDragDepth] = useState(0);\n  let [dragState, setDragState] = useState({\n    x: 0,\n    y: 0,\n  });\n  \n  const dropStub = (ev: DragEvent) => {\n    ev.preventDefault();\n    \n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(0);\n    setDragState({\n      x,\n      y,\n    });\n    onDrop(ev);\n  };\n  const onDragEnter = (ev: DragEvent) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(d => d + 1);\n    setDragState({\n      x,\n      y,\n    });\n  };\n  const onDragLeave = (ev: DragEvent) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    let [x, y] = [ev.clientX, ev.clientY];\n    setDragDepth(d => d - 1);\n    setDragState({\n      x,\n      y,\n    });\n    };\n  const onDragOver = (ev: DragEvent) => {\n    ev.preventDefault();\n    onDrag(ev.clientX, ev.clientY)\n  };\n    return [dragDepth > 0, dragState, {\n        onDragEnter,\n        onDragLeave,\n        onDragOver,\n        onDrop: dropStub,\n    }]\n}\n","import { PropsWithChildren } from \"react\";\nimport React from \"react\";\nimport \"./Toolbar.css\";\n\ninterface ToolbarProps {}\nfunction Toolbar(props: PropsWithChildren<ToolbarProps>) {\n    return (\n        <div className=\"toolbar\">\n            {props.children}\n        </div>);\n}\nexport default Toolbar","import { useSelector } from \"react-redux\"\nimport { RootStore } from \"../../store\";\nimport React from \"react\";\nimport \"./Toast.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\n\nexport function ToastArea(props: {}) {\n  const toasts = useSelector((state: RootStore) => state.toast.toasts);\n  const { t } = useTranslation();\n  return (<div className=\"toastArea\">\n    <AnimateSharedLayout>\n    {\n      toasts.map(toast =>\n        <motion.div className=\"toast\"\n          initial={{position: \"relative\", opacity: 0}} \n          animate={{position: \"relative\", opacity: 1}} \n          exit={{ position: \"relative\", opacity: 0 }} \n          layout\n          key={toast.id}\n        >\n          {t(toast.msg)}\n        </motion.div>\n      )\n      }\n    </AnimateSharedLayout>\n    </div>\n  )\n}","import React from \"react\";\nimport \"./Loading.css\";\n\nexport function Loading() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"double-bounce1\"></div>\n      <div className=\"double-bounce2\"></div>\n    </div>\n  )\n}","import React from \"react\";\nimport \"./App.css\";\nimport Grid from \"./grid2/Grid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Toolbar from \"./toolbar/Toolbar\";\nimport { Offset, GridSpace } from \"../modules/grid/units\";\nimport { RootStore } from \"../store\";\nimport { host } from \"../modules/comms\";\nimport { setDimensions, reset } from \"../modules/grid\";\nimport { ToastArea } from \"./toasts/ToastArea\";\nimport { issueToast } from \"../modules/toast\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loading } from \"./toolkit/Loading\";\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nfunction App() {\n  let comms = useSelector((state: RootStore) => {\n    console.log(state);\n    return state.comms\n  });\n  let dim = useSelector((state: RootStore) => [state.grid.width, state.grid.height])\n  let dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"App\">\n      <ToastArea />\n      <Grid dimensions={dim as Offset<GridSpace>} />\n      <Toolbar>\n        <button onClick={() => dispatch(setDimensions({width: dim[0] + 1, height: dim[1]}))}>Add Column</button>\n        <button onClick={() => dispatch(setDimensions({width: dim[0], height: dim[1] + 1}))}>Add Row</button>\n        <button onClick={() => dispatch(reset({}))}>Reset</button>\n        <button onClick={() => dispatch(issueToast(t(\"hello\")))}>Say hi</button>\n        {comms.status === 'offline' && (\n          <button onClick={() => dispatch(host())}>Host</button>\n        )}\n        {comms.status === 'pending' && (\n          <Loading />\n        )}\n\n        {comms.hosting && `hosting: ${comms.gameId}`}\n      </Toolbar>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport comms, {state} from './modules/comms'\nimport grid from './modules/grid'\nimport toast from './modules/toast'\nimport { applySync } from './modules/sync';\n\nconst mainReducer = combineReducers({ comms, grid, toast });\nexport type RootStore = ReturnType<typeof mainReducer>;\n\nconst storedState: RootStore = localStorage.getItem('reduxState') ?? JSON.parse(localStorage.getItem('reduxState')!);\nconst initialState: RootStore = mainReducer(undefined, { type: 'null' });\nif (storedState?.grid) {\n  initialState.grid = storedState?.grid\n}\n\nconst store = configureStore({\n  reducer(state, action): ReturnType<typeof mainReducer> {\n    if (action.type === 'STATE_SYNC') {\n      return applySync(state, action as any);\n    }\n    return mainReducer(state, action);\n  },\n  middleware: m => [...m(), api => next => action => {\n    // Send out all actions that originated on this peer\n    // if we didn't check that it came from this peer, we'd\n    // bounce messages back and forth forever\n    state.conn && action.meta?.shared && action.meta?.src === state.conn?.id && state.conn.send(action);\n    return next(action);\n  }],\n  preloadedState: initialState,\n})\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\nexport default store;","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n \nimport Backend from 'i18next-xhr-backend';\n \ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n \n    lng: 'en',\n    fallbackLng: 'en',\n    whitelist: ['en', 'de'],\n \n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: '/battlegrid/locales/{{lng}}/{{ns}}.json',\n    },\n  });\n \nexport default i18n;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport { connect } from './modules/comms';\nimport './i18n';\n//import * as serviceWorker from './serviceWorker';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst game = urlParams.get(\"join\");\nif (game) {\n  store.dispatch(connect(game));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={null}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}